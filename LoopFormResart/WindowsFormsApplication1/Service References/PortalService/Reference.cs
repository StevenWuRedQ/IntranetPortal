//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DroneManage.PortalService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PortalService.ICommonService")]
    public interface ICommonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendMessage", ReplyAction="http://tempuri.org/ICommonService/SendMessageResponse")]
        void SendMessage(string userName, string title, string msg, string bble, System.DateTime notifyTime, string createBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendMessage", ReplyAction="http://tempuri.org/ICommonService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string userName, string title, string msg, string bble, System.DateTime notifyTime, string createBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmailByTemplate", ReplyAction="http://tempuri.org/ICommonService/SendEmailByTemplateResponse")]
        void SendEmailByTemplate(string userName, string templateName, System.Collections.Generic.Dictionary<string, string> emailData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmailByTemplate", ReplyAction="http://tempuri.org/ICommonService/SendEmailByTemplateResponse")]
        System.Threading.Tasks.Task SendEmailByTemplateAsync(string userName, string templateName, System.Collections.Generic.Dictionary<string, string> emailData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmail", ReplyAction="http://tempuri.org/ICommonService/SendEmailResponse")]
        void SendEmail(string userName, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmail", ReplyAction="http://tempuri.org/ICommonService/SendEmailResponse")]
        System.Threading.Tasks.Task SendEmailAsync(string userName, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmailByControl", ReplyAction="http://tempuri.org/ICommonService/SendEmailByControlResponse")]
        void SendEmailByControl(string toAddresses, string subject, string constrolName, System.Collections.Generic.Dictionary<string, string> @params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmailByControl", ReplyAction="http://tempuri.org/ICommonService/SendEmailByControlResponse")]
        System.Threading.Tasks.Task SendEmailByControlAsync(string toAddresses, string subject, string constrolName, System.Collections.Generic.Dictionary<string, string> @params);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendTaskSummaryEmail", ReplyAction="http://tempuri.org/ICommonService/SendTaskSummaryEmailResponse")]
        void SendTaskSummaryEmail(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendTaskSummaryEmail", ReplyAction="http://tempuri.org/ICommonService/SendTaskSummaryEmailResponse")]
        System.Threading.Tasks.Task SendTaskSummaryEmailAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/UpdateLeadsSearchStatus", ReplyAction="http://tempuri.org/ICommonService/UpdateLeadsSearchStatusResponse")]
        void UpdateLeadsSearchStatus(int leadsSearchId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/UpdateLeadsSearchStatus", ReplyAction="http://tempuri.org/ICommonService/UpdateLeadsSearchStatusResponse")]
        System.Threading.Tasks.Task UpdateLeadsSearchStatusAsync(int leadsSearchId, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendTeamActivityEmail", ReplyAction="http://tempuri.org/ICommonService/SendTeamActivityEmailResponse")]
        void SendTeamActivityEmail(string teamName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendTeamActivityEmail", ReplyAction="http://tempuri.org/ICommonService/SendTeamActivityEmailResponse")]
        System.Threading.Tasks.Task SendTeamActivityEmailAsync(string teamName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendShortSaleActivityEmail", ReplyAction="http://tempuri.org/ICommonService/SendShortSaleActivityEmailResponse")]
        void SendShortSaleActivityEmail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendShortSaleActivityEmail", ReplyAction="http://tempuri.org/ICommonService/SendShortSaleActivityEmailResponse")]
        System.Threading.Tasks.Task SendShortSaleActivityEmailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendLegalActivityEmail", ReplyAction="http://tempuri.org/ICommonService/SendLegalActivityEmailResponse")]
        void SendLegalActivityEmail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendLegalActivityEmail", ReplyAction="http://tempuri.org/ICommonService/SendLegalActivityEmailResponse")]
        System.Threading.Tasks.Task SendLegalActivityEmailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/LegalFollowUp", ReplyAction="http://tempuri.org/ICommonService/LegalFollowUpResponse")]
        void LegalFollowUp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/LegalFollowUp", ReplyAction="http://tempuri.org/ICommonService/LegalFollowUpResponse")]
        System.Threading.Tasks.Task LegalFollowUpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendShortSaleUserSummayEmail", ReplyAction="http://tempuri.org/ICommonService/SendShortSaleUserSummayEmailResponse")]
        void SendShortSaleUserSummayEmail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendShortSaleUserSummayEmail", ReplyAction="http://tempuri.org/ICommonService/SendShortSaleUserSummayEmailResponse")]
        System.Threading.Tasks.Task SendShortSaleUserSummayEmailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendUserActivitySummayEmail", ReplyAction="http://tempuri.org/ICommonService/SendUserActivitySummayEmailResponse")]
        void SendUserActivitySummayEmail(string type, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendUserActivitySummayEmail", ReplyAction="http://tempuri.org/ICommonService/SendUserActivitySummayEmailResponse")]
        System.Threading.Tasks.Task SendUserActivitySummayEmailAsync(string type, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmailByAddress", ReplyAction="http://tempuri.org/ICommonService/SendEmailByAddressResponse")]
        void SendEmailByAddress(string toAddress, string ccAddress, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/SendEmailByAddress", ReplyAction="http://tempuri.org/ICommonService/SendEmailByAddressResponse")]
        System.Threading.Tasks.Task SendEmailByAddressAsync(string toAddress, string ccAddress, string subject, string body);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServiceChannel : DroneManage.PortalService.ICommonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServiceClient : System.ServiceModel.ClientBase<DroneManage.PortalService.ICommonService>, DroneManage.PortalService.ICommonService {
        
        public CommonServiceClient() {
        }
        
        public CommonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendMessage(string userName, string title, string msg, string bble, System.DateTime notifyTime, string createBy) {
            base.Channel.SendMessage(userName, title, msg, bble, notifyTime, createBy);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string userName, string title, string msg, string bble, System.DateTime notifyTime, string createBy) {
            return base.Channel.SendMessageAsync(userName, title, msg, bble, notifyTime, createBy);
        }
        
        public void SendEmailByTemplate(string userName, string templateName, System.Collections.Generic.Dictionary<string, string> emailData) {
            base.Channel.SendEmailByTemplate(userName, templateName, emailData);
        }
        
        public System.Threading.Tasks.Task SendEmailByTemplateAsync(string userName, string templateName, System.Collections.Generic.Dictionary<string, string> emailData) {
            return base.Channel.SendEmailByTemplateAsync(userName, templateName, emailData);
        }
        
        public void SendEmail(string userName, string subject, string body) {
            base.Channel.SendEmail(userName, subject, body);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(string userName, string subject, string body) {
            return base.Channel.SendEmailAsync(userName, subject, body);
        }
        
        public void SendEmailByControl(string toAddresses, string subject, string constrolName, System.Collections.Generic.Dictionary<string, string> @params) {
            base.Channel.SendEmailByControl(toAddresses, subject, constrolName, @params);
        }
        
        public System.Threading.Tasks.Task SendEmailByControlAsync(string toAddresses, string subject, string constrolName, System.Collections.Generic.Dictionary<string, string> @params) {
            return base.Channel.SendEmailByControlAsync(toAddresses, subject, constrolName, @params);
        }
        
        public void SendTaskSummaryEmail(string userName) {
            base.Channel.SendTaskSummaryEmail(userName);
        }
        
        public System.Threading.Tasks.Task SendTaskSummaryEmailAsync(string userName) {
            return base.Channel.SendTaskSummaryEmailAsync(userName);
        }
        
        public void UpdateLeadsSearchStatus(int leadsSearchId, int status) {
            base.Channel.UpdateLeadsSearchStatus(leadsSearchId, status);
        }
        
        public System.Threading.Tasks.Task UpdateLeadsSearchStatusAsync(int leadsSearchId, int status) {
            return base.Channel.UpdateLeadsSearchStatusAsync(leadsSearchId, status);
        }
        
        public void SendTeamActivityEmail(string teamName) {
            base.Channel.SendTeamActivityEmail(teamName);
        }
        
        public System.Threading.Tasks.Task SendTeamActivityEmailAsync(string teamName) {
            return base.Channel.SendTeamActivityEmailAsync(teamName);
        }
        
        public void SendShortSaleActivityEmail() {
            base.Channel.SendShortSaleActivityEmail();
        }
        
        public System.Threading.Tasks.Task SendShortSaleActivityEmailAsync() {
            return base.Channel.SendShortSaleActivityEmailAsync();
        }
        
        public void SendLegalActivityEmail() {
            base.Channel.SendLegalActivityEmail();
        }
        
        public System.Threading.Tasks.Task SendLegalActivityEmailAsync() {
            return base.Channel.SendLegalActivityEmailAsync();
        }
        
        public void LegalFollowUp() {
            base.Channel.LegalFollowUp();
        }
        
        public System.Threading.Tasks.Task LegalFollowUpAsync() {
            return base.Channel.LegalFollowUpAsync();
        }
        
        public void SendShortSaleUserSummayEmail() {
            base.Channel.SendShortSaleUserSummayEmail();
        }
        
        public System.Threading.Tasks.Task SendShortSaleUserSummayEmailAsync() {
            return base.Channel.SendShortSaleUserSummayEmailAsync();
        }
        
        public void SendUserActivitySummayEmail(string type, System.DateTime startDate, System.DateTime endDate) {
            base.Channel.SendUserActivitySummayEmail(type, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task SendUserActivitySummayEmailAsync(string type, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.SendUserActivitySummayEmailAsync(type, startDate, endDate);
        }
        
        public void SendEmailByAddress(string toAddress, string ccAddress, string subject, string body) {
            base.Channel.SendEmailByAddress(toAddress, ccAddress, subject, body);
        }
        
        public System.Threading.Tasks.Task SendEmailByAddressAsync(string toAddress, string ccAddress, string subject, string body) {
            return base.Channel.SendEmailByAddressAsync(toAddress, ccAddress, subject, body);
        }
    }
}
