'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace RulesEngine
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="BaseRule", [Namespace]:="http://schemas.datacontract.org/2004/07/IntranetPortal.RulesEngine"),  _
     System.SerializableAttribute()>  _
    Partial Public Class BaseRule
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ExecuteNowField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RuleNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExecuteNow() As Boolean
            Get
                Return Me.ExecuteNowField
            End Get
            Set
                If (Me.ExecuteNowField.Equals(value) <> true) Then
                    Me.ExecuteNowField = value
                    Me.RaisePropertyChanged("ExecuteNow")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RuleName() As String
            Get
                Return Me.RuleNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RuleNameField, value) <> true) Then
                    Me.RuleNameField = value
                    Me.RaisePropertyChanged("RuleName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="RulesEngine.IRulesEngineServices")>  _
    Public Interface IRulesEngineServices
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/GetRules", ReplyAction:="http://tempuri.org/IRulesEngineServices/GetRulesResponse")>  _
        Function GetRules() As RulesEngine.BaseRule()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/GetRules", ReplyAction:="http://tempuri.org/IRulesEngineServices/GetRulesResponse")>  _
        Function GetRulesAsync() As System.Threading.Tasks.Task(Of RulesEngine.BaseRule())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/GetRulesString", ReplyAction:="http://tempuri.org/IRulesEngineServices/GetRulesStringResponse")>  _
        Function GetRulesString() As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/GetRulesString", ReplyAction:="http://tempuri.org/IRulesEngineServices/GetRulesStringResponse")>  _
        Function GetRulesStringAsync() As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/ExecuteRule", ReplyAction:="http://tempuri.org/IRulesEngineServices/ExecuteRuleResponse")>  _
        Sub ExecuteRule(ByVal ruleName As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/ExecuteRule", ReplyAction:="http://tempuri.org/IRulesEngineServices/ExecuteRuleResponse")>  _
        Function ExecuteRuleAsync(ByVal ruleName As String) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/StartRule", ReplyAction:="http://tempuri.org/IRulesEngineServices/StartRuleResponse")>  _
        Sub StartRule(ByVal ruleName As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/StartRule", ReplyAction:="http://tempuri.org/IRulesEngineServices/StartRuleResponse")>  _
        Function StartRuleAsync(ByVal ruleName As String) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/StopRule", ReplyAction:="http://tempuri.org/IRulesEngineServices/StopRuleResponse")>  _
        Sub StopRule(ByVal ruleName As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IRulesEngineServices/StopRule", ReplyAction:="http://tempuri.org/IRulesEngineServices/StopRuleResponse")>  _
        Function StopRuleAsync(ByVal ruleName As String) As System.Threading.Tasks.Task
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IRulesEngineServicesChannel
        Inherits RulesEngine.IRulesEngineServices, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class RulesEngineServicesClient
        Inherits System.ServiceModel.ClientBase(Of RulesEngine.IRulesEngineServices)
        Implements RulesEngine.IRulesEngineServices
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetRules() As RulesEngine.BaseRule() Implements RulesEngine.IRulesEngineServices.GetRules
            Return MyBase.Channel.GetRules
        End Function
        
        Public Function GetRulesAsync() As System.Threading.Tasks.Task(Of RulesEngine.BaseRule()) Implements RulesEngine.IRulesEngineServices.GetRulesAsync
            Return MyBase.Channel.GetRulesAsync
        End Function
        
        Public Function GetRulesString() As String Implements RulesEngine.IRulesEngineServices.GetRulesString
            Return MyBase.Channel.GetRulesString
        End Function
        
        Public Function GetRulesStringAsync() As System.Threading.Tasks.Task(Of String) Implements RulesEngine.IRulesEngineServices.GetRulesStringAsync
            Return MyBase.Channel.GetRulesStringAsync
        End Function
        
        Public Sub ExecuteRule(ByVal ruleName As String) Implements RulesEngine.IRulesEngineServices.ExecuteRule
            MyBase.Channel.ExecuteRule(ruleName)
        End Sub
        
        Public Function ExecuteRuleAsync(ByVal ruleName As String) As System.Threading.Tasks.Task Implements RulesEngine.IRulesEngineServices.ExecuteRuleAsync
            Return MyBase.Channel.ExecuteRuleAsync(ruleName)
        End Function
        
        Public Sub StartRule(ByVal ruleName As String) Implements RulesEngine.IRulesEngineServices.StartRule
            MyBase.Channel.StartRule(ruleName)
        End Sub
        
        Public Function StartRuleAsync(ByVal ruleName As String) As System.Threading.Tasks.Task Implements RulesEngine.IRulesEngineServices.StartRuleAsync
            Return MyBase.Channel.StartRuleAsync(ruleName)
        End Function
        
        Public Sub StopRule(ByVal ruleName As String) Implements RulesEngine.IRulesEngineServices.StopRule
            MyBase.Channel.StopRule(ruleName)
        End Sub
        
        Public Function StopRuleAsync(ByVal ruleName As String) As System.Threading.Tasks.Task Implements RulesEngine.IRulesEngineServices.StopRuleAsync
            Return MyBase.Channel.StopRuleAsync(ruleName)
        End Function
    End Class
End Namespace
